{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","total","perPage","currentPage","onPageChange","countPages","count","Math","trunc","getCountPages","visiblePage","Array","fill","map","elem","index","isDisabledPrev","isDisabledNext","className","classNames","disabled","href","onClick","page","active","item","from","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","useEffect","endItem","startItem","getItemsNumber","visibleItems","slice","id","value","onChange","event","currentTarget","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAWaA,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAYMC,EAVgB,WACpB,IAAMC,EAAQL,GAASC,EAEvB,OAAMI,EAAQ,EAIPC,KAAKC,MAAMF,GAAS,EAHlBA,EAMQG,GAEbC,EAAc,IAAIC,OAAON,GAC5BO,KAAK,GACLC,KAAI,SAACC,EAAMC,GAAP,OAAiBD,EAAOC,KAEzBC,EAAkC,KAAhBb,EAClBc,GAAkBd,IAAgBE,EAiBxC,OACE,qCACE,qBAAIa,UAAU,aAAd,UACE,oBACEA,UACEC,IACE,YACA,CAAEC,SAAUJ,IAJlB,SAQE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAhCc,WAClBN,GAIJZ,GAAc,SAAAmB,GAAI,iBAAQA,EAAO,OAsB3B,oBAUDb,EAAYG,KAAI,SAACU,GAAD,OACf,oBACEL,UACEC,IACE,YACA,CAAEK,QAASrB,IAAgBoB,IAJjC,SAQE,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMlB,EAAa,GAAD,OAAImB,KAJjC,SAMGA,SAIP,oBACEL,UACEC,IACE,YACA,CAAEC,SAAUH,IAJlB,SAQE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QA7Dc,WAClBL,GAIJb,GAAc,SAAAmB,GAAI,iBAAQA,EAAO,OAmD3B,uBAWJ,6BACGvB,EAAMa,KAAI,SAACY,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,aC7GPzB,ECLC,SAAoB0B,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBlB,KAAI,SAAAgB,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,KAAvC,mBAAO/B,EAAP,KAAgBgC,EAAhB,KACA,EAAsCD,mBAAS,KAA/C,mBAAO9B,EAAP,KAAoBgC,EAApB,KAEAC,qBAAU,WACRD,EAAe,OACd,CAACjC,IAEJ,IAkBA,EAduB,WACrB,IACImC,GAAWnC,GAAWC,EAM1B,OAJIkC,EAAU,KACZA,EAAU,IAGL,CACLC,WARiBpC,IAAYC,EAAc,GAAK,EAShDkC,WAI2BE,GAAvBD,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,QACbG,EAAexC,EAAMyC,MAAMH,EAAY,EAAGD,GAEhD,OACE,sBAAKnB,UAAU,YAAf,UACE,uDACA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,4BAEOf,EAFP,mBAE6BmC,EAF7B,cAE4CD,EAF5C,cAIA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOzC,EACP0C,SAnCW,SACnBC,GADmB,OAEhBX,EAAWW,EAAMC,cAAcH,QA4B5B,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAGJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACElB,MAAOwC,EACPvC,MAAO,GACPC,QAASA,EACTE,aAAc+B,EACdhC,YAAaA,QEjErB6C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0715dec9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  items: string[],\n  total: number,\n  perPage: string,\n  currentPage: string,\n  onPageChange: React.Dispatch<React.SetStateAction<string>>,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const getCountPages = () => {\n    const count = total / +perPage;\n\n    if (!(count % 1)) {\n      return count;\n    }\n\n    return Math.trunc(count) + 1;\n  };\n\n  const countPages = getCountPages();\n\n  const visiblePage = new Array(+countPages)\n    .fill(1)\n    .map((elem, index) => elem + index);\n\n  const isDisabledPrev = +currentPage === 1;\n  const isDisabledNext = +currentPage === countPages;\n  const handleClickPrev = () => {\n    if (isDisabledPrev) {\n      return;\n    }\n\n    onPageChange((page => `${+page - 1}`));\n  };\n\n  const handleClickNext = () => {\n    if (isDisabledNext) {\n      return;\n    }\n\n    onPageChange((page => `${+page + 1}`));\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={\n            classNames(\n              'page-item',\n              { disabled: isDisabledPrev },\n            )\n          }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isDisabledPrev}\n            onClick={handleClickPrev}\n          >\n            «\n          </a>\n        </li>\n        {visiblePage.map((page) => (\n          <li\n            className={\n              classNames(\n                'page-item',\n                { active: +currentPage === page },\n              )\n            }\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(`${page}`)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={\n            classNames(\n              'page-item',\n              { disabled: isDisabledNext },\n            )\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isDisabledNext}\n            onClick={handleClickNext}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map((item) => (\n          <li data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState('1');\n\n  useEffect(() => {\n    setCurrentPage('1');\n  }, [perPage]);\n\n  const handleSelect = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => setPerPage(event.currentTarget.value);\n\n  const getItemsNumber = () => {\n    const startItem = +perPage * (+currentPage - 1) + 1;\n    let endItem = +perPage * +currentPage;\n\n    if (endItem > 42) {\n      endItem = 42;\n    }\n\n    return {\n      startItem,\n      endItem,\n    };\n  };\n\n  const { startItem, endItem } = getItemsNumber();\n  const visibleItems = items.slice(startItem - 1, endItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {` ${currentPage} (items ${startItem} - ${endItem} of 42)`}\n      </p>\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        items={visibleItems}\n        total={42}\n        perPage={perPage}\n        onPageChange={setCurrentPage}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}